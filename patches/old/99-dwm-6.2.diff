diff --git a/config.def.h b/config.def.h
index 91b3320..8106db6 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,18 +1,21 @@
 /* See LICENSE file for copyright and license details. */
 
+/* imports */ 
+#include <X11/XF86keysym.h>
+
 /* appearance */
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int borderpx  = 0;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int swallowfloating    = 0;        /* 1 means swallow floating windows by default */
 static const unsigned int gappih    = 20;       /* horiz inner gap between windows */
-static const unsigned int gappiv    = 10;       /* vert inner gap between windows */
+static const unsigned int gappiv    = 20;       /* vert inner gap between windows */
-static const unsigned int gappoh    = 10;       /* horiz outer gap between windows and screen edge */
+static const unsigned int gappoh    = 30;       /* horiz outer gap between windows and screen edge */
 static const unsigned int gappov    = 30;       /* vert outer gap between windows and screen edge */
 static       int smartgaps          = 0;        /* 1 means no outer gap when there is only one window */
-static const int showbar            = 1;        /* 0 means no bar */
+static const int showbar            = 0;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
-static const int vertpad            = 10;       /* vertical padding of bar */
-static const int sidepad            = 10;       /* horizontal padding of bar */
+static const int vertpad            = 5;        /* vertical padding of bar */
+static const int sidepad            = 30;       /* horizontal padding of bar */
-static const char *fonts[]          = { "monospace:size=10" };
+static const char *fonts[]          = { "monospace:size=10","RobotoMono Nerd Font:style=Regular:pixelsize=12:antialias=true:autohint=true" };
 static const char dmenufont[]       = "monospace:size=10";
 static char normbgcolor[]           = "#222222";
@@ -37,8 +37,13 @@
 	*/
 	/* class     instance  title           tags mask  isfloating  isterminal  noswallow  monitor */
 	{ "Gimp",    NULL,     NULL,           0,         1,          0,           0,        -1 },
-	{ "Firefox", NULL,     NULL,           1 << 8,    0,          0,          -1,        -1 },
-	{ "St",      NULL,     NULL,           0,         0,          1,           0,        -1 },
+	{ "firefox", NULL,     NULL,           0,    	  0,          0,          -1,        -1 },
+	{ "st-256color",       NULL,     NULL,            0,          0,           1,           0,        -1 },
+	{ "kitty",   NULL,     NULL,           0,         0,          1,           0,        -1 },
+	{ "Spotify", NULL,     NULL,           0,         0,          0,           0,         1 }, /* 0 -> primary monitor, 1 -> secondary monitor, -1 -> focused monitor */
+	{ "broken",  "broken", NULL,           0,         0,          0,           0,         1 }, /* spotify starts up with no window title, neither class / instance */
+       { NULL,      NULL,     "Trackma",      0,         1,          0,           0,        -1 },
+	{ "Thunar",  NULL,     NULL,           0,    	  1,          0,           0,        -1 },
 	{ NULL,      NULL,     "Event Tester", 0,         0,          0,           1,        -1 }, /* xev */
 };
 
@@ -70,7 +73,8 @@
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
+#define MODKEY2 Mod1Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -82,8 +86,23 @@
 
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", normbgcolor, "-nf", normfgcolor, "-sb", selbordercolor, "-sf", selfgcolor, NULL };
-static const char *termcmd[]  = { "st", NULL };
+static const char *dmenucmd[] = { "dmenu_run", NULL };
+static const char *termcmd[]  = { "st", NULL };
+
+static const char *upvol[] = { "/home/kumao/.local/bin/volume", "-i", "5", NULL };
+static const char *upvol1[] = { "/home/kumao/.local/bin/volume", "-i", "1", NULL };
+static const char *downvol[] = { "/home/kumao/.local/bin/volume", "-d", "5", NULL };
+static const char *downvol1[] = { "/home/kumao/.local/bin/volume", "-d", "1", NULL };
+static const char *mutevol[] = { "/home/kumao/.local/bin/mute", NULL };
+
+static const char *lightup[] = { "/home/kumao/.local/bin/light", "+10%", NULL };
+static const char *lightdown[] = { "/home/kumao/.local/bin/light", "10%-", NULL };
+static const char *lightupsec[] = { "/home/kumao/.local/bin/light", "+10%", "secondary", NULL };
+static const char *lightdownsec[] = { "/home/kumao/.local/bin/light", "10%-", "secondary", NULL };
+
+static const char *aprev[] = { "/usr/bin/playerctl", "previous", NULL };
+static const char *aplay[] = { "/home/kumao/.local/bin/play-pause", NULL };
+static const char *anext[] = { "/usr/bin/playerctl", "next", NULL };
 
 static Key keys[] = {
 	/* modifier                     key        function        argument */
@@ -102,22 +119,22 @@
 	{ MODKEY|ShiftMask,             XK_l,      setcfact,       {.f = -0.25} },
 	{ MODKEY|ShiftMask,             XK_o,      setcfact,       {.f =  0.00} },
 	{ MODKEY,                       XK_Return, zoom,           {0} },
-	{ MODKEY|Mod4Mask,              XK_u,      incrgaps,       {.i = +1 } },
-	{ MODKEY|Mod4Mask|ShiftMask,    XK_u,      incrgaps,       {.i = -1 } },
-	{ MODKEY|Mod4Mask,              XK_i,      incrigaps,      {.i = +1 } },
-	{ MODKEY|Mod4Mask|ShiftMask,    XK_i,      incrigaps,      {.i = -1 } },
-	{ MODKEY|Mod4Mask,              XK_o,      incrogaps,      {.i = +1 } },
-	{ MODKEY|Mod4Mask|ShiftMask,    XK_o,      incrogaps,      {.i = -1 } },
-	{ MODKEY|Mod4Mask,              XK_6,      incrihgaps,     {.i = +1 } },
-	{ MODKEY|Mod4Mask|ShiftMask,    XK_6,      incrihgaps,     {.i = -1 } },
-	{ MODKEY|Mod4Mask,              XK_7,      incrivgaps,     {.i = +1 } },
-	{ MODKEY|Mod4Mask|ShiftMask,    XK_7,      incrivgaps,     {.i = -1 } },
-	{ MODKEY|Mod4Mask,              XK_8,      incrohgaps,     {.i = +1 } },
-	{ MODKEY|Mod4Mask|ShiftMask,    XK_8,      incrohgaps,     {.i = -1 } },
-	{ MODKEY|Mod4Mask,              XK_9,      incrovgaps,     {.i = +1 } },
-	{ MODKEY|Mod4Mask|ShiftMask,    XK_9,      incrovgaps,     {.i = -1 } },
-	{ MODKEY|Mod4Mask,              XK_0,      togglegaps,     {0} },
-	{ MODKEY|Mod4Mask|ShiftMask,    XK_0,      defaultgaps,    {0} },
+	{ MODKEY|MODKEY2,              XK_u,      incrgaps,       {.i = +1 } },
+	{ MODKEY|MODKEY2|ShiftMask,    XK_u,      incrgaps,       {.i = -1 } },
+	{ MODKEY|MODKEY2,              XK_i,      incrigaps,      {.i = +1 } },
+	{ MODKEY|MODKEY2|ShiftMask,    XK_i,      incrigaps,      {.i = -1 } },
+	{ MODKEY|MODKEY2,              XK_o,      incrogaps,      {.i = +1 } },
+	{ MODKEY|MODKEY2|ShiftMask,    XK_o,      incrogaps,      {.i = -1 } },
+	{ MODKEY|MODKEY2,              XK_6,      incrihgaps,     {.i = +1 } },
+	{ MODKEY|MODKEY2|ShiftMask,    XK_6,      incrihgaps,     {.i = -1 } },
+	{ MODKEY|MODKEY2,              XK_7,      incrivgaps,     {.i = +1 } },
+	{ MODKEY|MODKEY2|ShiftMask,    XK_7,      incrivgaps,     {.i = -1 } },
+	{ MODKEY|MODKEY2,              XK_8,      incrohgaps,     {.i = +1 } },
+	{ MODKEY|MODKEY2|ShiftMask,    XK_8,      incrohgaps,     {.i = -1 } },
+	{ MODKEY|MODKEY2,              XK_9,      incrovgaps,     {.i = +1 } },
+	{ MODKEY|MODKEY2|ShiftMask,    XK_9,      incrovgaps,     {.i = -1 } },
+	{ MODKEY|MODKEY2,              XK_0,      togglegaps,     {0} },
+	{ MODKEY|MODKEY2|ShiftMask,    XK_0,      defaultgaps,    {0} },
 	{ MODKEY,                       XK_Tab,    view,           {0} },
 	{ MODKEY|ShiftMask,             XK_Tab,       shiftviewclients, { .i = +1 } },
 	{ MODKEY|ShiftMask,             XK_backslash, shiftviewclients, { .i = -1 } },
@@ -139,7 +156,7 @@
 	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
 	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
 	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
-	{ MODKEY,                       XK_F5,     xrdb,           {.v = NULL } },
+	{ MODKEY|ShiftMask,             XK_r,     xrdb,           {.v = NULL } },
 	{ MODKEY, 			XK_KP_End,    movetoedge,       {.v = "-1 1" } },
 	{ MODKEY, 			XK_KP_Down,   movetoedge,       {.v = "0 1" } },
 	{ MODKEY, 			XK_KP_Next,   movetoedge,       {.v = "1 1" } },
@@ -160,6 +177,18 @@
 	TAGKEYS(                        XK_9,                      8)
 	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
 	{ MODKEY|ControlMask|ShiftMask, XK_q,      quit,           {1} }, 
+	{ 0,                            XF86XK_AudioLowerVolume,        spawn, {.v = downvol } },
+        { MODKEY,                       XF86XK_AudioLowerVolume,        spawn, {.v = downvol1 } },
+        { 0,                            XF86XK_AudioMute,               spawn, {.v = mutevol } },
+        { 0,                            XF86XK_AudioRaiseVolume,        spawn, {.v = upvol } },
+        { MODKEY,                       XF86XK_AudioRaiseVolume,        spawn, {.v = upvol1 } },
+        { 0,                            XF86XK_MonBrightnessUp,         spawn, {.v = lightup } },
+        { 0,                            XF86XK_MonBrightnessDown,       spawn, {.v = lightdown } },
+        { ShiftMask,                            XF86XK_MonBrightnessUp,         spawn, {.v = lightupsec } },
+        { ShiftMask,                            XF86XK_MonBrightnessDown,       spawn, {.v = lightdownsec } },
+        { 0,                            XF86XK_AudioPrev, spawn, {.v = aprev } },
+        { 0,                            XF86XK_AudioPlay, spawn, {.v = aplay } },
+        { 0,                            XF86XK_AudioNext, spawn, {.v = anext } },
 };
 
 /* button definitions */
diff --git a/dwm.c b/dwm.c
index 4465af1..626e073 100644
--- a/dwm.c
+++ b/dwm.c
@@ -1864,7 +1864,7 @@
 	wa.cursor = cursor[CurNormal]->cursor;
 	wa.event_mask = SubstructureRedirectMask|SubstructureNotifyMask
 		|ButtonPressMask|PointerMotionMask|EnterWindowMask
-		|LeaveWindowMask|StructureNotifyMask|PropertyChangeMask;
+		|LeaveWindowMask|StructureNotifyMask|PropertyChangeMask|KeyPressMask;
 	XChangeWindowAttributes(dpy, root, CWEventMask|CWCursor, &wa);
 	XSelectInput(dpy, root, wa.event_mask);
 	grabkeys();
